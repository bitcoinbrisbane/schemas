{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://schemas.verida.io/inbox/type/databaseSync/schema.json",
    "title": "Data",
    "name": "inbox/type/databaseSync",
    "description": "An inbox message requesting the syncronization of data from a source database to a destination database",
    "type": "object",
    "properties": {
        "externalDb": {
            "name": {
                "title": "Destination database name",
                "description": "Name of the database to sync to",
                "type": "string"
            },
            "did": {
                "title": "Destination DID",
                "description": "DID of the database owner",
                "type": "string"
            },
            "appName": {
                "title": "Destination application name",
                "description": "Name of the application to sync to",
                "type": "string"
            },
            "encryptionKey": {
                "$ref": "https://schemas.verida.io/security/key/symmetric/schema.json"
            }
        },
        "internalDb": {
            "name": {
                "title": "Source database name",
                "description": "Name of the source database to sync from",
                "type": "string"
            }
        },
        "schemas": {
            "title": "Schemas to sync",
            "type": "array"
        },
        "filter": {
            "title": "Filter",
            "description": "Database filter the data must match",
            "type": "object",
            "default": {}
        },
        "direction": {
            "title": "Sync direction",
            "type": "string",
            "enum": ["pull", "push", "both"]
        },
        "status": {
            "title": "Status",
            "type": "string",
            "enum": ["accept", "reject"]
        }
    },
    "required": [
        "destinationDb.name",
        "destinationDb.did",
        "destinationDb.appName",
        "destinationDb.encryptionKey",
        "sourceDb.name",
        "schemas"
    ]
  }